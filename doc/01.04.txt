01.04

while문 무한루프식
while(true){}
for문 무한루프식
for(;;){}

/* index는 0부터 시작하고 마지막 인덱스는 항상 길이(.length)보다 한개 작은 숫자를 가진다.
존재하지 않는 인덱스에 접근할 경우 java.lang.StringIndexOutOfBoundsException이 발생한다.
*/

중첩 while문에서 내부while문에서 초기식은 반드시 외부while문 맨 위에 적어야 중첩 반복이 올바르게 나타난다.

break문은 if문 안에 있어도 반복문을 탈출한다.(switch문도 탈출)

if(조건식){명령문1;}에서 명령문이 한개 뿐이라면 블럭 생략가능하다. 
if(조건식)명령문1;

break는 중첩 반복문에서 내부 반복문에서 쓰이면 내부반복문만 탈출하는데 아예 외부반복문을 탈출하고 싶으면 label:을 외부반복문 위에 써서 탈출하면된다.label은 정해진 이름이 있는 것은 아니다.고정된 키워드가 아니다. 변수명처럼 지어서 만들 수 있다.

continue를 만나면 증감식으로 이동하고 아래의 명령문은 실행되지 않는다.

----------------------------------------------------------------------

05_배열

변수공간안에 하나의 값만 작성되는 것이 아쉬움-> 동일한 자료형을 묶어서 저장할 수 있다.

배열은 최초 선언한 길이로 고정되며 이후 바꿀 수 없다.

배열은 이름이 하나이고 인덱스를 통해 여러 공간에 도달할 수 있다.반복문으로 쉽게 인덱스에 접근할 수 있다.

배열의 선언
int arr[],int[] arr 둘 다 가능

new 연산자 ->heap메모리에 공간을 할당하겠다라는 의미
new int [5]-> heap이라는 공간에 4byte공간을 5개 만들겠다.

0x -> 16진수 표기법 ,메모리상의 위치를 나타낼 때 표현법
시작 주소값 중요
시작 주소값이 stack메모리에 있는 arr이라는 변수에 저장 된다.
arr[0]-> arr의 시작 주소에서 0만큼 이동한 공간
arr[1] -> arr의 시작 주소(0x1234)에서 1만큼 이동한 공간

String str에서 문자열의 길이는 메소드이고 (str.length())
int[] arr 에서 배열의 길이는 필드 값(arr.length)이다.

for문의 초기식에는 변수 여러가지 설정 가능
for(int i = 0,value=0 ; i<arr.length ;i++){
            arr[i] = value+=10;
        }

int[] arr; => stack에 변수 공간 만들어지기만 함 이후 할당 필요

new 연산자는 heap영역에 공간을 할당하고 발생한 주소 값을 반환하는 연산자이다.

레퍼런스 변수 : 실질적인 값이 아니라 주소 값을 담는 변수

자료형은 기본자료형,참조자료형 두개로 나뉜다.
기본 자료형에는 값이 담기고 참조 자료형에는 주소값이 담긴다.

heap에 저장된 것은 항상 주소값으로 접근한다.

iarr : [I@3d075dc0
darr : [D@4eec7777
주소값은 다음 처럼 표기된다. 앞에 I,D는 자료형을 표현해준 것이다.16진수로 된 메모리의 위치를 갖고 있다.

한 번 지정한 배열의 크기는 변경하지 못한다.
새로운 배열을 생성하여 그 주소 값을 레퍼런스 변수에 덮어쓴다.

.hashCode()메소드 : 고유한 주소값을 반환해주지만 16진수에서 10진수로 변환해서 나타내준다.10진수 주소값이다. 라고 생각


한 번 지정한 배열의 크기는 변경하지 못한다.
새로운 배열을 생성하여 그 주소 값을 레퍼런스 변수에 덮어쓴다.
그렇다면 덮어쓰기 전의 주소는 heap영역에서 어떤 참조변수의 선택도 받지 못한 채 시간이 흐르면 오래된 영역으로 이동하고 garbageCollector가 한꺼번에 지우게 된다.

주소를 참조하지 않게 바꾸면 heap영역에 있던 메모리는 old메모리로 이동하고 gc에 의해 삭제 된다. 그렇다면 참조하지 않게 어떻게 바꿀까? null이용
arr = null;로 지정하면 NullpointerException이 나옴->앞에 있는 참조형 변수가 null일 때 나타남.

배열은 객체임

heap영역에 선언되면 일단 빈 공간은 없고 채워져있다.

정리) 
변수 : 하나의 자료형,하나의 값
배열 : 하나의 자료형,여러개의 값
int[] arr = new int[10];
for(int i=0;i<arr.length;i++){
sout(arr[i]);
}
























