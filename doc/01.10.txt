 01.10

객체 배열
-----------------------------------------------------------------------------------------------
상속

부모=상위=super
자식=하위=serve

상속을 사용하는 이유 : 효율적인 재사용성,다형성 문법의 토대가 됨

is-a관계일 때=
어떠한 자식 클래스 하나의 부모클래스이다. 라는 말이 성립할 때 상속관계를 설정해주는 것이 좋다. 무분별한 상속 관계 x

모든 생성자의 첫줄에는 super()가 기본적으로 있음
super()는 부모클래스의 생성자를 가져온다는 의미임.

모든클래스의 부모클래스는 object클래스이다.

부모가 두명일 수는 없다. 

super.은 부모의 인스턴스를 참조해서 쓸 수 있는 주소값

컴파일러는 기본적으로 this.을 추가한다.

생성자는 상속되지 않지만 내부적으로 super()를 자동으로 설정해주어 부모클래스의 생성자를 받아옴

자식 클래스에서 생성자에서 super()로 부모클래스의 생성자에 접근하는 것은 가능하지만 this()와 함께 쓰는 것은 불가능하다.둘 다 첫번째 줄에 쓰여야하는 문구이기 때문이다.

super()은 부모 인스턴스를 만들라는 뜻이다.

stackoverflow에러 : 메소드가 계속 stack영역에 쌓이는 현상

부모클래스의 메소드 A에서 오버라이딩 한 메소드B에서 this.메소드를 쓰면 자식메소드에서 나 자신의 메소드B를 계속해서 호출하는 것이기 때문에 재귀 호출이 일어나면서 StackOverFlowError발생한다. 반면 메소드 A를 오버라이딩 하지 않은 상태에서 super나 this를 통해 호출하는 것은 가능하다.

오버라이딩 조건 
1. 메소드명동일2.메소드리턴타입동일3.매개변수의 타입,갯수,순서동일,4. 부모클래스의 private메소드는 오버라이딩 불가능 5. 부모클래스의 final키워드가 사용된 메소드는 오버라딩 불가능

클래스에 final붙으면 상속불가능
private혹은 final이 붙은 메소드는 오버라이딩 불가능

protected는 자신과 같거나 자신보다 넓은 범위로 오버라이딩하면 가능

----------------------------------------------------------------------------------------------------

다형성
하나의 인스턴스가 여러 타입을 가질 수 있다.
new Rabbit();은 타입이Rabbit,Animal,Object모두 가능하다.
Animal a = new Rabbit();이 가능해진다.

a클래스가 자식클래스이고 b클래스가 부모클래스이면 a클래스는 b클래스의 타입도 상속 받는다. -> a클래스는 a타입이기도하면서 b타입이기도 하다.

다형성 : 여러가지 타입을 가질 수 있는 성질 

바인딩 : 연결한다.

컨트롤 누르고 메소드클릭하면 컴파일 할때의 메소드로이동한다.

(Rabbit)a1. <- 참조연산자가 먼저 일어나기 때문에 괄호가나중에 실행되기 때문에 괄호로 다시 묶어주어야한다.

레퍼런스 변수가 참조하는 실제 인스턴스가 원하는 타입과 맞는지 비교하는 instacneof연산자 앞에는 레퍼런스변수,뒤에는 자료형,클래스명이 온다.